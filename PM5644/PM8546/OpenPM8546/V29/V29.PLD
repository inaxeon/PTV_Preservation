/*
 *   Philips PM8546 Logo Generator
 *   Open source recreation
 * 
 *   File        : V29.pld
 *   Author      : Matt Millman
 *   Description : UV/BR encoder PAL
 *
 *   This is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 2 of the License, or
 *   (at your option) any later version.
 *   This software is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *   You should have received a copy of the GNU General Public License
 *   along with this software.  If not, see <http://www.gnu.org/licenses/>.
 */
 
Name     V29 ;
PartNo   00 ;
Date     29/09/2023 ;
Revision 01 ;
Designer Matt Millman ;
Company  - ;
Assembly None ;
Location  ;
Device   g22v10 ;

/* &=AND #=OR $=XOR */

PIN 1 = GCLK;
PIN 2 = nTEXT_BLANK;
PIN 6 = G_DATA;
PIN 7 = B_DATA;
PIN 8 = R_DATA;
PIN 9 = RGB_MODE;
PIN 10 = DELAY_ON;
PIN 13 = IDX;

PIN [19..23] = [V4..0];
PIN [14..18] = [U4..0];

Field COL_IN = [RGB_MODE, nTEXT_BLANK, IDX, G_DATA, B_DATA, R_DATA];
Field U_OUT = [U4..0];
Field V_OUT = [V4..0];

/*
 * UV/BR CHANNEL COLOUR LOOKUP TABLE:
 *
 * How these values were derived: The hardware appears to be designed such
 * that nearly the full range of the DAC is used to generate the U/V signals.
 * Making an educated guess as to the original workings is more difficult.
 *
 * To derive the below values the U/V trimmers were set half-way, the board is
 * populated with 1% tolerence components, then the voltages at the -S input
 * to the colour encoder were compared to +S when the PM5644 is in EBU colour
 * bar mode. This will give values -close- to the orignials, and certainly the
 * ability to tune to perfection as desired. Yes it would be better to do all
 * of the workings from the start, but eh. I'm tired of this.
 *
 * No idea if the value chosen for RGB mode is correct. No surviving RGB
 * PM5644's are known to verify it but this is how it was implemented.
 */

Table  COL_IN => U_OUT.d {
   'b'x0xxxx   =>   'd'16;  /* BLANK */
   /* RGB: B */
   'b'11xx0x   =>   'd'16;  /* OFF */
   'b'11xx1x   =>   'd'31;  /* ON (Unverified value) */
   /* YUV: U */
   'b'01x111   =>   'd'16;  /* WHITE */
   'b'01x101   =>   'd'24;  /* YELLOW */
   'b'01x110   =>   'd'14;  /* CYAN */
   'b'01x100   =>   'd'21;  /* GREEN */
   'b'01x011   =>   'd'10;  /* MAGENTA */
   'b'01x001   =>   'd'18;  /* RED */
   'b'01x010   =>   'd'8;   /* BLUE */
   'b'01x000   =>   'd'16;  /* BLACK */
}

Table COL_IN => V_OUT.d {
   'b'x0xxxx   =>   'd'16;  /* BLANK */
   /* RGB: R */
   'b'11xxx0   =>   'd'16;  /* OFF */
   'b'11xxx1   =>   'd'31;  /* ON (Unverified value) */
   /* YUV: V- */
   'b'010111   =>   'd'16;  /* WHITE */
   'b'010101   =>   'd'14;  /* YELLOW */
   'b'010110   =>   'd'26;  /* CYAN */
   'b'010100   =>   'd'24;  /* GREEN */
   'b'010011   =>   'd'8;   /* MAGENTA */
   'b'010001   =>   'd'6;   /* RED */
   'b'010010   =>   'd'18;  /* BLUE */
   'b'010000   =>   'd'16;  /* BLACK */
   /* YUV: V+ */
   'b'011111   =>   'd'16;  /* WHITE */
   'b'011101   =>   'd'18;  /* YELLOW */
   'b'011110   =>   'd'6;   /* CYAN */
   'b'011100   =>   'd'8;   /* GREEN */
   'b'011011   =>   'd'24;  /* MAGENTA */
   'b'011001   =>   'd'26;  /* RED */
   'b'011010   =>   'd'14;  /* BLUE */
   'b'011000   =>   'd'16;  /* BLACK */
}

U_OUT.oe = 'b'11111;
U_OUT.sp = 'b'00000;
U_OUT.ar = 'b'00000;

V_OUT.oe = 'b'11111;
V_OUT.sp = 'b'00000;
V_OUT.ar = 'b'00000;
